{
    "hashset": {
        "description": "1M insert of random u64 numbers in HashSet and unordered_set",
        "comment_on_result": "Rust uses Swiss table for its HashSet implementation, so it is faster"
    },
    "ordered_set": {
        "description": "1M insert of random u64 numbers in BtreeSet and set",
        "comment_on_result": ""
    },
    "priority_queue": {
        "description": "5M push-push-pop operation of random u64 numbers in BinaryHeap and priority_queue",
        "comment_on_result": ""
    },
    "vector_push": {
        "description": "100M push of u64 numbers in Vec and vector",
        "comment_on_result": ""
    },
    "vector_push_reserved": {
        "description": "100M push of u64 numbers in Vec and vector when reserve(100M+5) is called",
        "comment_on_result": ""
    }
}